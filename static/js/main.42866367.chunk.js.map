{"version":3,"sources":["store/counterSlice.js","App.js","store/index.js","index.js"],"names":["counterSlice","createSlice","name","initialState","value","reducers","increment","state","decrement","refresh","selectCount","counter","actions","App","useState","count","setCount","reduxCount","useSelector","dispatch","useDispatch","className","onClick","store","configureStore","reducer","rootElement","document","getElementById","createRoot","render"],"mappings":"uNAMMA,EAAeC,YAAY,CAC/BC,KAAM,UACNC,aANmB,CACnBC,MAAO,GAOPC,SAAU,CACRC,UAAW,SAACC,GACVA,EAAMH,MAAQG,EAAMH,MAAQ,CAC9B,EACAI,UAAW,SAACD,GACVA,EAAMH,MAAQG,EAAMH,MAAQ,CAC9B,EACAK,QAAS,SAACF,GACRA,EAAMH,MAAQ,CAChB,KAGSM,EAAc,SAACH,GAAK,OAAKA,EAAMI,QAAQP,KAAM,EACnD,EAA0CJ,EAAaY,QAA/CN,EAAS,EAATA,UAAWE,EAAS,EAATA,UAAWC,EAAO,EAAPA,QAEtBT,I,OC+BAa,EA3CH,WAEV,MAA0BC,mBAAS,GAAE,mBAA9BC,EAAK,KAAEC,EAAQ,KAchBC,EAAaC,YAAYR,GAEzBS,EAAWC,cAGjB,OACE,sBAAKC,UAAU,MAAK,UAClB,sBAAKA,UAAU,gBAAe,UAC5B,0DACA,6BAAKN,IACL,wBAAQO,QAlBS,WACrBN,EAASD,EAAQ,EACnB,EAgBsC,eAChC,wBAAQO,QAhBO,WACnBN,EAAS,EACX,EAcoC,eAC9B,wBAAQM,QAxBS,WACrBN,EAASD,EAAQ,EACnB,EAsBsC,kBAElC,8BACE,sBAAKM,UAAU,kBAAiB,UAC9B,uDACA,6BAAKJ,IACL,wBAAQK,QAAS,kBAAMH,EAASX,IAAY,EAAC,eAC7C,wBAAQc,QAAS,kBAAMH,EAASV,IAAU,EAAC,eAC3C,wBAAQa,QAAS,kBAAMH,EAASb,IAAY,EAAC,sBAKvD,EC9CeiB,EALDC,YAAe,CAC3BC,QAAS,CACPd,QAASX,EAAayB,WCEpBC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAAC,IAAQ,CAACP,MAAOA,EAAM,SACrB,cAAC,EAAG,Q","file":"static/js/main.42866367.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  value: 0\r\n};\r\n\r\nconst counterSlice = createSlice({\r\n  name: \"counter\" /* anything you want , named */,\r\n  initialState /* automatically get value from initialState */,\r\n  /* define here all the things what happen; */\r\n  reducers: {\r\n    increment: (state) => {\r\n      state.value = state.value + 1;\r\n    },\r\n    decrement: (state) => {\r\n      state.value = state.value - 1;\r\n    },\r\n    refresh: (state) => {\r\n      state.value = 0;\r\n    }\r\n  }\r\n});\r\nexport const selectCount = (state) => state.counter.value;\r\nexport const { increment, decrement, refresh } = counterSlice.actions;\r\n\r\nexport default counterSlice;\r\n","import \"./styles.css\";\nimport { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectCount,\n  increment,\n  decrement,\n  refresh\n} from \"./store/counterSlice\";\n\n//1. useSelector-hook to pull data from Redux store\n//2. useDispatch - hook to fire action\n\nconst App = () => {\n  //local state with useStore\n  const [count, setCount] = useState(0);\n\n  const incrementCount = () => {\n    setCount(count + 1);\n  };\n\n  const decrementCount = () => {\n    setCount(count - 1);\n  };\n  const refreshCount = () => {\n    setCount(0);\n  };\n\n  //redux\n  const reduxCount = useSelector(selectCount); //grab the data from redux store\n  //now we need dispatch\n  const dispatch = useDispatch(); //trigger the functions from store\n  //\n\n  return (\n    <div className=\"App\">\n      <div className=\"use-container\">\n        <h1>This is useState counter</h1>\n        <h1>{count}</h1>\n        <button onClick={decrementCount}>-</button>\n        <button onClick={refreshCount}>o</button>\n        <button onClick={incrementCount}>+</button>\n      </div>\n      <div>\n        <div className=\"redux-container\">\n          <h1>This is Redux counter</h1>\n          <h1>{reduxCount}</h1>\n          <button onClick={() => dispatch(decrement())}>-</button>\n          <button onClick={() => dispatch(refresh())}>o</button>\n          <button onClick={() => dispatch(increment())}>+</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n\n//Dispatch is \"do something\"\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport counterSlice from \"./counterSlice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    counter: counterSlice.reducer\r\n  }\r\n});\r\nexport default store;\r\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n//import reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>\n);\n"],"sourceRoot":""}